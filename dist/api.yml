openapi: 3.0.0
info:
  title: api
  description: API for  project
  version: 1.0.0
tags:
  - name: Users
  - name: Auth
  - name: League
  - name: Players
  - name: Teams
  - name: Games
  - name: Search
paths:
  /Register:
    post:
      tags:
        - Auth
      summary: Add new user
      description: A new user from the client is added to the server
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: A new user has been added
        "400":
          description: wrong input parameters
  /Login:
    post:
      tags:
        - Auth
      summary: Login an exist user
      description: An exist user login to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginScheme"
      responses:
        "200":
          description: >
            User was found in the DB and authenitcated successfully.
            The session ID is returned in a cookie named `session`. 
            You should include this cookie in subsequent requests
          # headers:
          #   Set-Cookie:
          #     schema:
          #       type: string
          #       example: session=87s97sdhgf279293f8w0e9
            # Note that the Set-Cookie header and securitySchemes are not connected in any way, and the Set-Header definition is for documentation purposes only.
        "401":
          description: Authentication failed
  /logout:
    post:
      tags:
        - Auth
      summary: logout a user from the system and delete his cookie
      responses:
        "200":
          description: "the user has ben successfully logged out"
  /league/getDetails:
    get:
      tags:
        - league
      summary: Return the details about the current league
      responses:
        "200":
          description: data about the current league returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/League"
        "404":
          description: league not found
  /users/favoritePlayers:
    get:
      tags:
        - Users
      summary: Return the favorite players that were saved by user
      responses:
        "200":
          description: data about the user's favorites players returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlayerPreview"
        "401":
          description: user is not authorized
    post:
      summary: save player in the favorites list of a user
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                playerId:
                  type: string
                  description: player's id which the user saved
                  example: 26722
      responses:
        "201":
          description: The player successfully saved as favorite
        "401":
          description: user is not authorized
  /users/favoriteGames:
    get:
      tags:
        - Users
      summary: Return the favorite games that were saved by user
      responses:
        "200":
          description: data about the user's favorites games returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/newGamesPreview"
        "401":
          description: user is not authorized
    post:
      summary: save game in the favorites list of a user
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gameId:
                  type: string
                  description: game's id which the user saved
                  example: 4
      responses:
        "201":
          description: The game successfully saved as favorite
        "401":
          description: user is not authorized
  /teams/teamFullDetails/{teamId}:
    get:
      summary: get full deatils about a team
      description: useful for team page
      tags:
        - Teams
      parameters:
        - in: path
          name: teamId
          description: team's id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: data about the team
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "404":
          description: teamId is not exists
  /players/playerPage/{playerId}:
    get:
      tags:
        - Players
      summary: Return the player page
      parameters:
        - in: path
          name: playerId
          description: player's id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: data about the player
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/playerPage"
        "404":
          description: Player id is not exists
  /games/getAllNewGames:
    get:
      tags:
        - Games
      summary: Return the all games in league
      responses:
        "200":
          description: data about all games in the league
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/newGamesPreview"
        "401":
          description: user is not authorized
  /games/getAllOldGames:
    get:
      tags:
        - Games
      summary: Return the all games in league
      responses:
        "200":
          description: data about all games in the league
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/oldGamesPreview"
        "401":
          description: user is not authorized
  /search/searchByName/{name}:
    get:
      tags:
        - Search
      summary: Return teams and players the user search
      parameters:
        - in: path
          name: name
          description: player or team name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: all the players and teams 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/searchByName"
        "204":
          description: Results not found
  /search/filterWithPosition/{name}/{position}:
    get:
      tags:
        - Search
      summary: Return players the user filter
      parameters:
        - in: path
          name: name
          description: player name
          required: true
          schema:
            type: string
        - in: path
          name: position
          description: player position
          required: true
          schema:
            type: string
      responses:
        "200":
          description: all the players 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/filter"
        "204":
          description: Results not found
  /search/filterWithTeamName/{name}/{team_name}:
    get:
      tags:
        - Search
      summary: Return players the user filter
      parameters:
        - in: path
          name: name
          description: player name
          required: true
          schema:
            type: string
        - in: path
          name: team_name
          description: player team's name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: all the players 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/filter"
        "204":
          description: Results not found
  /search/filterWithPositionAndTeamName/{name}/{position}/{team_name}:
    get:
      tags:
        - Search
      summary: Return players the user filter
      parameters:
        - in: path
          name: name
          description: player name
          required: true
          schema:
            type: string
        - in: path
          name: position
          description: player position
          required: true
          schema:
            type: string
        - in: path
          name: team_name
          description: player team's name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: all the players 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/filter"
        "204":
          description: Results not found
  /users/favoriteTeams:
    get:
      tags:
        - Users
      summary: Return the favorite teams that were saved by user
      responses:
        "200":
          description: data about the user's favorites teams returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeamPreview"
        "401":
          description: user is not authorized
    post:
      summary: save tean in the favorites list of a user
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                teamId:
                  type: string
                  description: team's id which the user saved
                  example: 85
      responses:
        "201":
          description: The player successfully saved as favorite
        "401":
          description: user is not authorized
  /games/Referee:
    get:
      summary: get all referee
      description: useful for add games
      tags:
        - Games
      responses:
        "200":
          description: data about all the referee
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Referee"
        "404":
          description: No referee
  /games/getAllTeamsName:
    get:
      summary: get all teams name
      description: useful for add games
      tags:
        - Games
      responses:
        "200":
          description: data about all the teams name
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamPreview"
        "404":
          description: No teams
  /games/addGame:
    post:
      tags:
        - Games
      summary: Add new game
      description: A new game is added to the server
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                game_date:
                  type: string
                  description:  Game date
                  example: '2021-08-20'
                game_time:
                  type: string
                  description:  Game time
                  example: '14:00'
                hometeam:
                  type: string
                  description:  Game home team
                  example: 'Silkeborg'
                awayteam:
                  type: string
                  description:  Game away team
                  example: 'Randers'
                feild:
                  type: string
                  description:  Game feild
                  example: 'JYSK park'
                referee:
                  type: string
                  description:  Game referee
                  example: 'Mike Dean'
      responses:
        "201":
          description: A new game has been added
        "400":
          description: wrong input parameters
components:
  schemas:
    User:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: username conatins between 3 to 8 letters only
          example: Dani
        firstname:
          type: string
          description: user's first name
          example: Dan
        lastname:
          type: string
          description: user's last name
          example: Choen
        country:
          type: string
          description: user's country
          example: USA
        password:
          maxLength: 10
          minLength: 5
          type: string
          description:
            password conatins between 5 to 10 chars, at least one of them
            is a number and a special char
          format: password
          example: DaniC@1
        email:
          pattern: email
          type: string
          description: user's email
          example: dan.choen@gmail.com
        image:
          pattern: URL
          type: string
          description: URL for the user's image
          example: https://cloudinary.com/
      description: Model containing user info
    LoginScheme:
      type: object
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 8
          description: username conatins letters only
          example: Dani
        password:
          type: string
          minLength: 5
          maxLength: 10
          format: password
          description: password conatins at least one number and one special char
          example: DaniC@1
    League:
      type: object
      properties:
        league_name:
          type: string
          description: league name
          example: Superliga
        current_season_name:
          type: string
          description: current season name
          example: "2020/2021"
        current_stage_name:
          type: string
          description: current stage name
          example: Championship Round
        next_game:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/newGamesPreview"
    PlayerPreview:
      type: object
      properties:
        id:
          type: integer
          description: player's id
          example: 1
        name:
          type: string
          description: player's name
          example: Sten Michael Grytebust
        image:
          type: string
          description: player's image
          format: URL
          example: https://cdn.sportmonks.com/images/soccer/players/11/84587.png
        positionName:
          type: string
          description: player's position in team
          example: GoalKeeper
        positionId:
          type: integer
          description: player's position in team
          example: 2
        team_name:
          type: string
          description: player's team name
          example: København
    newGamesPreview:
      type: object
      properties:
        game_id:
          type: integer
          description:  Game id
          example: 2
        game_date:
          type: string
          description:  Game date
          example: '2021-08-20'
        game_time:
          type: string
          description:  Game time
          example: '14:00'
        hometeam:
          type: string
          description:  Game home team
          example: 'Silkeborg'
        hometeamId:
          type: integer
          description:  Game home team Id
          example: 86
        awayteam:
          type: string
          description:  Game away team
          example: 'Randers'
        awayteamId:
          type: integer
          description:  Game away team Id
          example: 2394
        feild:
          type: string
          description:  Game feild
          example: 'JYSK park'
        referee:
          type: string
          description:  Game referee
          example: 'Mike Dean'
    oldGamesPreview:
      type: object
      properties:
        game_id:
          type: integer
          description:  Game id
          example: 2
        game_date:
          type: string
          description:  Game date
          example: '2021-05-20'
        game_time:
          type: string
          description:  Game time
          example: '16:00'
        hometeam:
          type: string
          description:  Game home team
          example: 'Silkeborg'
        hometeamId:
          type: integer
          description:  Game home team Id
          example: 86
        awayteam:
          type: string
          description:  Game away team
          example: 'Randers'
        awayteamId:
          type: integer
          description:  Game away team Id
          example: 2394
        feild:
          type: string
          description:  Game feild
          example: 'JYSK park'
        referee:
          type: string
          description:  Game referee
          example: 'Mike Dean'
        score:
          type: string
          description: game score
          example: "0:1"
        logevent:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/logEventPreview"
    Team:
      type: object
      properties:
        id:
          type: integer
          description: team's id
          example: 1
        name:
          type: string
          description: team name
          example: 'Hibernian'
        twitter:
          type: string
          description: team twitter name
          example: "@hibernianFC"
        founded:
          type: int
          description: team year of establishment
          example: 1876
        logo_path:
          type: URL
          description: team logo
          example: https://cdn.sportmonks.com/images//soccer/teams/2/66.png
        players:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/PlayerPreview"
        new_games:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/newGamesPreview"
        old_game:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/oldGamesPreview"
    playerPage:
      type: object
      properties:
        id:
          type: integer
          description: player's id
          example: 1
        name:
          type: string
          description: player's name
          example: Sten Michael Grytebust
        image:
          type: string
          description: player's image
          format: URL
          example: https://cdn.sportmonks.com/images/soccer/players/11/84587.png
        positionName:
          type: string
          description: player's position in team
          example: GoalKeeper
        positionId:
          type: integer
          description: player's position in team
          example: 3
        team_name:
          type: string
          description: player's team name
          example: København
        common_name:
          type: string
          description: player's common name
          example: Sten
        nationality:
          type: string
          description: player's nationality
          example: France
        birthdate:
          type: string
          description: player's birth date
          example: '12/05/1983'
        birthcountry:
          type: string
          description: player's birth country
          example: French
        height:
          type: string
          description: player's Height
          example: '176 cm'
        weight:
          type: string
          description: player's weight
          example: '80 kg'
    logEventPreview:
      type: object
      properties:
        minute:
          type: int
          description:  Game home team
          example: 30
        event:
          type: string
          description:  Event description
          example: 'red card Silkeborg'
    searchByName:
      type: object
      properties:
        teams:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/TeamPreview"      
        players:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/PlayerPreview"
    TeamPreview:
      type: object
      properties:
        id:
          type: integer
          description: team's id
          example: 1
        name:
          type: string
          description: team name
          example: 'Hibernian'
        logo_path:
          type: URL
          description: team logo
          example: https://cdn.sportmonks.com/images//soccer/teams/2/66.png
    Referee:
      type: object
      properties:
        name:
          type: string
          description: referee name
          example: 'Mike Dean'
    filter:
      type: object
      properties:   
        players:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/PlayerPreview"
    
        
